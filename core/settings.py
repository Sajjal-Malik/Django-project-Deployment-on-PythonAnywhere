"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 4.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-bpd#!a_=@8un7do+&tfj(ba*7y2e3902@64pw2z3ww0sltqli#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'matrimony',
    'accounts',
    'blog',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATE_DIR = BASE_DIR / 'templates'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR,],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    # },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / "static",
]
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_ROOT = BASE_DIR / 'media'
MEDIA_URL = '/media/'

LOGIN_URL = 'accounts:login'
# LOGIN_REDIRECT_URL = 'accounts:login'

AUTH_USER_MODEL = 'accounts.CustomUser'






# Steps to Use Mailgun in Django Without django-anymail:
# Create a Mailgun Account:

# Sign up at Mailgun.
# Verify your email and log in to the dashboard.
# Add and Verify Your Domain:

# Go to Sending > Domains and add your domain.
# Follow Mailgun's instructions to verify the domain using DNS records (SPF, DKIM).
# Get SMTP Credentials:

# Navigate to SMTP Settings in your Mailgun dashboard.
# Copy the SMTP server details, username (usually postmaster@<your-domain>), and password.
# Configure Django Email Settings:

# In your Django project's settings.py, set up the SMTP email configuration using Mailgun's details.
# Set Up Password Reset URLs:

# Add the built-in Django password reset URLs (PasswordResetView, PasswordResetConfirmView, etc.) in your urls.py.
# Create Password Reset Email Templates:

# Create templates for the password reset process: password_reset_form.html, password_reset_done.html, etc.
# Test Email Functionality:

# Run your Django server and test the password reset by visiting the reset URL (/password_reset/).
# Check Mailgun logs to verify email delivery.
# Check Mailgun Dashboard:

# Monitor the Mailgun Logs for any issues or errors related to email delivery.



# by default email settings by django
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'



# Email settings for Mailgun
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.mailgun.org'
EMAIL_PORT = 587
EMAIL_USE_TLS = True 
EMAIL_HOST_USER = 'postmaster@sandbox1bd05e30a1c9479ab746dd6c05161cce.mailgun.org'
EMAIL_HOST_PASSWORD = 'db724def99906aa5dbc1a14ac57f07df-6df690bb-6fa4bb2c'
# Default "From" email address
DEFAULT_FROM_EMAIL = "matrimony@yourdomain.com"